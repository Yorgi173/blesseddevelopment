#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from telegram import *
from telegram.ext import *
from cfg.config import ConfigurationParser

import logging

import database

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)

MAIN, QUESTION, CONTACT = range(3)


db_data = []


def add_data(data_db):
    global db_data
    db_data.append(data_db)
    print(db_data)
    if len(db_data) == 2:
        database.sqlite3_add_record('./database.db', db_data, 'bot_request')
        db_data = []



def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        text=start_message(),
        reply_markup=start_menu_markup()
    )
    return MAIN

def first_menu(update, context):
    logger.info(str(update))
    query = update.callback_query
    query.edit_message_text(
        text=first_menu_msg(),
    )
    return QUESTION


def second_menu(update, context):
    logger.info(str(update))
    query = update.callback_query
    query.edit_message_text(
        text=second_menu_msg(),
    )
    return QUESTION


def third_menu(update, context):
    logger.info(str(update))
    query = update.callback_query
    query.edit_message_text(
        text=third_menu_msg(),
    )
    return QUESTION


def question(update, context):
    user = update.message.from_user
    add_data(update.message.text)
    logger.info("The %s asked a question?: %s", user.first_name, update.message.text)
    update.message.reply_text('–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äì –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞/–¢–≥/–ø–æ—á—Ç–∞'
                                '–í —Ñ–æ—Ä–º–∞—Ç–µ:\n '
                                '–ò–º—è\n'
                                '+7 987 9911991\n'
                                '@–¢–ì–∏–º—è\n'
                                '–ø–æ—á—Ç–∞@gmail.com')

    return CONTACT


def contact(update, context):
    user = update.message.from_user
    add_data(update.message.text)
    logger.info("The %s asked a question?: %s", user.first_name, update.message.text)
    update.message.reply_text('–°–ø–∞—Å–∏–±–æ, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è)\n\n'
                                '–ê –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ‚Äì @smartestcapital')

    return ConversationHandler.END


def cancel(update, context):
    logger.info(str(update))
    user = update.message.from_user
    logger.info("User %s canceled the conversation.", user.first_name)
    update.message.reply_text('–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ú–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ‚Äì @smartestcapital',
                              reply_markup=ReplyKeyboardRemove())

    return ConversationHandler.END


def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)


# Keyboards #########################################
def start_menu_markup():
    keyboard = [[InlineKeyboardButton('1‚É£ –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã / –ù–∞—á–∏–Ω–∞—é—â–∏–π —Ç—Ä–µ–π–¥–µ—Ä\n / –ù–∞—á–∏–Ω–∞—é—â–∏–π –∏–Ω–≤–µ—Å—Ç–æ—Ä', callback_data='m1')],
                [InlineKeyboardButton('2‚É£ –¢—Ä–µ–π–¥–µ—Ä–∞–º / –ö–∞–ø–∏—Ç–∞–ª –≤ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', callback_data='m2')],
                [InlineKeyboardButton('3‚É£ –ò–Ω–≤–µ—Å—Ç–æ—Ä–∞–º / –£—Å–ª–æ–≤–∏—è / –ì–∞—Ä–∞–Ω—Ç–∏–∏', callback_data='m3')]]
    return InlineKeyboardMarkup(keyboard)


#  Messages #########################################
def start_message():
    return '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–∞–Ω–∏—è SmartestCapital (Safe Trading Ivestments)ü§ñ,' \
            ' –º—ã –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –í–∞—Å –≤–æ–ø—Ä–æ—Å—ã.\n' \
            '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 1, 2 –∏–ª–∏ 3\n\n' \
            '–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –Ω–∞–±–µ—Ä–∏—Ç–µ /cancel'


def first_menu_msg():
    return '–û–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ –í–∞—à –≤–æ–ø—Ä–æ—Å ' \
            '–≤ —Ñ–æ—Ä–º–∞—Ç–µ: \n' \
            '–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞? –ö–∞–∫ —Å—Ç–∞—Ç—å —Ç—Ä–µ–π–¥–µ—Ä–æ–º –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏? –ö–∞–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å? '


def second_menu_msg():
    return '–û–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ –í–∞—à –≤–æ–ø—Ä–æ—Å' \
            '–í —Ñ–æ—Ä–º–∞—Ç–µ: \n' \
            '–ö–∞–∫ —Å—Ç–∞—Ç—å —Ç—Ä–µ–π–¥–µ—Ä–æ–º/–∞–Ω–∞–ª–∏—Ç–∏–∫–æ–º –∫–æ–º–ø–∞–Ω–∏–∏? –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–∞–ø–∏—Ç–∞–ª –≤ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ?'


def third_menu_msg():
    return '–û–ø–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ –í–∞—à –≤–æ–ø—Ä–æ—Å' \
            '–í —Ñ–æ—Ä–º–∞—Ç–µ: \n' \
            '–£—Å–ª–æ–≤–∏—è –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤? –í–∞—à–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏? –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∏ —Å—Ä–æ–∫–∏?'


def main():
    cfg = ConfigurationParser()

    print(cfg.token)
    updater = Updater(cfg.token, use_context=True)
    dp = updater.dispatcher
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],

        states={

            MAIN: [CallbackQueryHandler(first_menu, pattern='m1'),
                   CallbackQueryHandler(second_menu, pattern='m2'),
                   CallbackQueryHandler(third_menu, pattern='m3')],

            QUESTION: [MessageHandler(Filters.text, question)],

            CONTACT: [MessageHandler(Filters.text, contact)],

        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    dp.add_handler(conv_handler)
    dp.add_error_handler(error)

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    database.sqlite3_create_db()
    main()